/// <reference types="powerbi-visuals-tools" />
import * as formatting from "powerbi-visuals-utils-formattingutils";
import TextProperties = formatting.textMeasurementService.TextProperties;
import ValueFormatterOptions = formatting.valueFormatter.ValueFormatterOptions;
import * as dataLabelInterfaces from "./dataLabelInterfaces";
import LabelFormattedTextOptions = dataLabelInterfaces.LabelFormattedTextOptions;
import VisualDataLabelsSettings = dataLabelInterfaces.VisualDataLabelsSettings;
import { Selection, Update } from "d3-selection";
export declare const maxLabelWidth: number;
export declare const defaultLabelDensity: string;
export declare const DefaultDy: string;
export declare const DefaultFontSizeInPt = 9;
export declare const StandardFontFamily: string;
export declare const LabelTextProperties: TextProperties;
export declare const defaultLabelColor = "#777777";
export declare const defaultInsideLabelColor = "#ffffff";
export declare const hundredPercentFormat = "0.00 %;-0.00 %;0.00 %";
export declare const defaultLabelPrecision: number;
export declare function updateLabelSettingsFromLabelsObject(labelsObj: dataLabelInterfaces.DataLabelObject, labelSettings: dataLabelInterfaces.VisualDataLabelsSettings): void;
export declare function getDefaultLabelSettings(show?: boolean, labelColor?: string, fontSize?: number): dataLabelInterfaces.VisualDataLabelsSettings;
export declare function getDefaultColumnLabelSettings(isLabelPositionInside: boolean): dataLabelInterfaces.VisualDataLabelsSettings;
export declare function getDefaultPointLabelSettings(): dataLabelInterfaces.PointDataLabelsSettings;
export declare function getLabelPrecision(precision: number, format: string): number;
export declare function drawDefaultLabelsForDataPointChart(data: any[], context: Selection<any, any, any, any>, layout: dataLabelInterfaces.ILabelLayout, viewport: powerbi.IViewport, isAnimator?: boolean, animationDuration?: number, hasSelection?: boolean, hideCollidedLabels?: boolean): Update<any>;
export declare function cleanDataLabels(context: Selection<any>, removeLines?: boolean): void;
export declare function setHighlightedLabelsOpacity(context: Selection<any>, hasSelection: boolean, hasHighlights: boolean): void;
export declare function getLabelFormattedText(options: LabelFormattedTextOptions): string;
export declare function enumerateDataLabels(options: dataLabelInterfaces.VisualDataLabelsSettingsOptions): powerbi.VisualObjectInstance;
export declare function enumerateCategoryLabels(enumeration: powerbi.VisualObjectInstanceEnumerationObject, dataLabelsSettings: VisualDataLabelsSettings, withFill: boolean, isShowCategory?: boolean, fontSize?: number): void;
export declare function createColumnFormatterCacheManager(): dataLabelInterfaces.IColumnFormatterCacheManager;
export declare function getOptionsForLabelFormatter(labelSetting: dataLabelInterfaces.VisualDataLabelsSettings, formatString: string, value2?: number, precision?: number): ValueFormatterOptions;
export declare function isTextWidthOverflows(textWidth: any, maxTextWidth: any): boolean;
export declare function isTextHeightOverflows(textHeight: any, innerChordLength: any): boolean;
